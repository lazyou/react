{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "youtu.be", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "title": "ReactCasts #3 - React's Children API", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/DJ53-G8EbxE?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "ReactCasts", "thumbnail_height": 360, "thumbnail_url": "https://i.ytimg.com/vi/DJ53-G8EbxE/hqdefault.jpg", "type": "video", "provider_name": "YouTube", "author_url": "https://www.youtube.com/channel/UCZkjWyyLvzWeoVWEpRemrDQ"}}, "saved": false, "id": "5c21v0", "gilded": 0, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/DJ53-G8EbxE?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "clicked": false, "report_reasons": null, "author": "cassiozen", "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "title": "ReactCasts #3 - React's Children API", "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/DJ53-G8EbxE?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "height": 338, "width": 600, "version": "1.0", "author_name": "ReactCasts", "thumbnail_height": 360, "thumbnail_url": "https://i.ytimg.com/vi/DJ53-G8EbxE/hqdefault.jpg", "type": "video", "provider_name": "YouTube", "author_url": "https://www.youtube.com/channel/UCZkjWyyLvzWeoVWEpRemrDQ"}}, "name": "t3_5c21v0", "score": 60, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/hcNVpsMTXAEJKjIWB_9SvD_4XuPd8tUkb_UVR090pwE.jpg?s=040c621c0320f9766c14ae867a67331b", "width": 480, "height": 360}, "resolutions": [{"url": "https://i.redditmedia.com/hcNVpsMTXAEJKjIWB_9SvD_4XuPd8tUkb_UVR090pwE.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=2873e3d31fd62636149685a3a515159f", "width": 108, "height": 81}, {"url": "https://i.redditmedia.com/hcNVpsMTXAEJKjIWB_9SvD_4XuPd8tUkb_UVR090pwE.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=becec525f6691e1a29ee5f135a099ec6", "width": 216, "height": 162}, {"url": "https://i.redditmedia.com/hcNVpsMTXAEJKjIWB_9SvD_4XuPd8tUkb_UVR090pwE.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=9a2a32de22bfc845189bf9ff216c128a", "width": 320, "height": 240}], "variants": {}, "id": "KdgrY0eL9yfJ0vy-i9CD7auXdIOe47he-7mrqNFbekI"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/FCDfl9tok-_QscBOuf8dVtDR817HoLSB2gUe17nPsIs.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/DJ53-G8EbxE?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "post_hint": "rich:video", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5c21v0/reactcasts_3_is_live_reacts_children_api/", "locked": false, "stickied": false, "created": 1478737772.0, "url": "https://youtu.be/DJ53-G8EbxE", "author_flair_text": null, "quarantine": false, "title": "ReactCasts #3 is live: React's Children API", "created_utc": 1478708972.0, "link_flair_text": null, "distinguished": null, "num_comments": 14, "visited": false, "num_reports": null, "ups": 60}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am interested in building a list with infinite scrolling without importing any third-party libraries. Does anyone know of any step-by-step resources to accomplish this? Thanks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I am interested in building a list with infinite scrolling without importing any third-party libraries. Does anyone know of any step-by-step resources to accomplish this? Thanks.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5c6892", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "floundrr", "media": null, "name": "t3_5c6892", "score": 5, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5c6892/any_resources_for_an_implementation_of_an/", "locked": false, "stickied": false, "created": 1478784817.0, "url": "https://www.reddit.com/r/reactjs/comments/5c6892/any_resources_for_an_implementation_of_an/", "author_flair_text": null, "quarantine": false, "title": "any resources for an implementation of an infinite List from scratch?", "created_utc": 1478756017.0, "link_flair_text": null, "distinguished": null, "num_comments": 3, "visited": false, "num_reports": null, "ups": 5}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "github.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5c6adm", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "cakesauce69", "media": null, "name": "t3_5c6adm", "score": 4, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/EORULb4yDEqwdKhex2Sn9bgXCaQ5H4D2RcSxt-v203s.jpg?s=362c5a604918cf0429606facedae7f94", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/EORULb4yDEqwdKhex2Sn9bgXCaQ5H4D2RcSxt-v203s.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=61e8050fc678ca1635e1008356162dd4", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/EORULb4yDEqwdKhex2Sn9bgXCaQ5H4D2RcSxt-v203s.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=1fda4e51ace02ff3881233e1e1d491a0", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/EORULb4yDEqwdKhex2Sn9bgXCaQ5H4D2RcSxt-v203s.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=559e0552fbc465c01fff52291cfe0b80", "width": 320, "height": 320}], "variants": {}, "id": "mUO6Kwn6SA1JzuXLUSeC0sZxPcfvXg3OPDbOxiY2BEY"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/y01bVvc0itEIfQcFIg6K6Re2XvqNYgfA4qy9rJbUzXI.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5c6adm/reactotron_now_supports_reduxsaga/", "locked": false, "stickied": false, "created": 1478785756.0, "url": "https://github.com/reactotron/reactotron/releases/tag/v1.4.0", "author_flair_text": null, "quarantine": false, "title": "Reactotron now supports redux-saga", "created_utc": 1478756956.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 4}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Say I have an app with the following paths:&lt;/p&gt;\n\n&lt;p&gt;/a\n  /a/b\n  /c&lt;/p&gt;\n\n&lt;p&gt;And each of them need some 3rd party code.&lt;/p&gt;\n\n&lt;p&gt;/foo.js\n  /bar.js, d3.js\n  /baz.js, jquery, bootstrap&lt;/p&gt;\n\n&lt;p&gt;How should I connect these assets to my main app?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Say I have an app with the following paths:\n\n  /a\n  /a/b\n  /c\n\nAnd each of them need some 3rd party code.\n\n  /foo.js\n  /bar.js, d3.js\n  /baz.js, jquery, bootstrap\n\nHow should I connect these assets to my main app?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5c5ltp", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "zhirzh", "media": null, "name": "t3_5c5ltp", "score": 5, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5c5ltp/how_to_load_3rd_party_jscss_for_specific_paths_in/", "locked": false, "stickied": false, "created": 1478776095.0, "url": "https://www.reddit.com/r/reactjs/comments/5c5ltp/how_to_load_3rd_party_jscss_for_specific_paths_in/", "author_flair_text": null, "quarantine": false, "title": "How to load 3rd party JS/CSS for specific paths in react-router?", "created_utc": 1478747295.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 5}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I want to use React but outside the browser and independent from DOM elements.&lt;/p&gt;\n\n&lt;p&gt;My goal is to build my own logic in the react component&amp;#39;s render function. Now, I managed to do this with react-server however the mount point of react-server is the renderToString function which returns the results as a string from my app.&lt;/p&gt;\n\n&lt;p&gt;But what I want to do instead is keep the React app live and running on the server so it would watch state changes and trigger Renders, etc.&lt;/p&gt;\n\n&lt;p&gt;Is there a way to do this?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I want to use React but outside the browser and independent from DOM elements.\n\nMy goal is to build my own logic in the react component's render function. Now, I managed to do this with react-server however the mount point of react-server is the renderToString function which returns the results as a string from my app.\n\nBut what I want to do instead is keep the React app live and running on the server so it would watch state changes and trigger Renders, etc.\n\nIs there a way to do this?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5c3ycg", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "Mate_Marschalko", "media": null, "name": "t3_5c3ycg", "score": 7, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5c3ycg/react_without_react_dom_possibly_reactserver/", "locked": false, "stickied": false, "created": 1478756758.0, "url": "https://www.reddit.com/r/reactjs/comments/5c3ycg/react_without_react_dom_possibly_reactserver/", "author_flair_text": null, "quarantine": false, "title": "react without React DOM - possibly React-server", "created_utc": 1478727958.0, "link_flair_text": null, "distinguished": null, "num_comments": 2, "visited": false, "num_reports": null, "ups": 7}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "github.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5c3cjp", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "barneycus", "media": null, "name": "t3_5c3cjp", "score": 5, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/wths2hAL9v38Ha3Dg02ZqHeN2iqXtuWsx2wzAOC5Mlk.jpg?s=84d98f8088bb30ca7c6a79a68da88b9a", "width": 250, "height": 250}, "resolutions": [{"url": "https://i.redditmedia.com/wths2hAL9v38Ha3Dg02ZqHeN2iqXtuWsx2wzAOC5Mlk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=22ab447800b9af522e36964c0fcf67b1", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/wths2hAL9v38Ha3Dg02ZqHeN2iqXtuWsx2wzAOC5Mlk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=fdb31686a5d3c2a056304fab9e76063d", "width": 216, "height": 216}], "variants": {}, "id": "sXuyEJVG5ur1EAKtHJaDUuiUXTXK6RnUNm7RxXwKKeE"}]}, "thumbnail": "http://a.thumbs.redditmedia.com/mXCwqG1AgN-VpslRKr8QWGF4MWBi8rULe3YaxTgL7H4.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5c3cjp/im_just_now_getting_into_react_and_extracted_this/", "locked": false, "stickied": false, "created": 1478750590.0, "url": "https://github.com/crc442/rc-actions", "author_flair_text": null, "quarantine": false, "title": "I'm just now getting into React and extracted this out of a larger project that I am working on. Would love some feedback. \u2b50\ufe0f", "created_utc": 1478721790.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 5}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "davidboyne.co.uk", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5c3mtg", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "boyneyy123", "media": null, "name": "t3_5c3mtg", "score": 3, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/Xgk8koHwC3vwUpsTdmjT3rmRJs0eBmHuW15_K-nuPdk.jpg?s=e262a40ccd15a0ab32de5178877371ea", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/Xgk8koHwC3vwUpsTdmjT3rmRJs0eBmHuW15_K-nuPdk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=a7abb8995013722ce271ad693bdcd99b", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/Xgk8koHwC3vwUpsTdmjT3rmRJs0eBmHuW15_K-nuPdk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=bc7d02d67d8b5803b85eb17306efcad3", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/Xgk8koHwC3vwUpsTdmjT3rmRJs0eBmHuW15_K-nuPdk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=63a7f15a8dfa03b6afeeadb7b4230ab7", "width": 320, "height": 320}], "variants": {}, "id": "qCdy1OmcweMwV1zoLuNB_ppahgRbH6HeSY26QJrDWVI"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/9Ipcb_yFX_uQowW0ee7PiZnBOsX99jUyNVpr9106O4A.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5c3mtg/build_a_simple_component_to_handle_media_queries/", "locked": false, "stickied": false, "created": 1478753509.0, "url": "http://davidboyne.co.uk/2016/11/07/building-a-media-query-component-in-react.html", "author_flair_text": null, "quarantine": false, "title": "Build a simple component to handle media queries in ReactJS", "created_utc": 1478724709.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 3}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "reddit.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5c0vn0", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "hellectronic", "media": null, "name": "t3_5c0vn0", "score": 11, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/4xFezp8qybWigpg6WN5gkAuI39AIPdv4jdHijFU4_ns.jpg?s=8598544207619a3020f808583e28b4c4", "width": 256, "height": 256}, "resolutions": [{"url": "https://i.redditmedia.com/4xFezp8qybWigpg6WN5gkAuI39AIPdv4jdHijFU4_ns.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=19f81c159c3852ca87417e2d2edde0b0", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/4xFezp8qybWigpg6WN5gkAuI39AIPdv4jdHijFU4_ns.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=2b071d25ede17deadf68cb9b7db13230", "width": 216, "height": 216}], "variants": {}, "id": "KR8oJeB8ComfEPX0bkCe_p2L73IOmk0sTCsyNlfXSNg"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/eK8JuCJZtjERlWsh6TobNzv-aMbOvXsS3DZ_jYJ0w-M.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5c0vn0/what_would_be_the_most_important_thing_for_you_in/", "locked": false, "stickied": false, "created": 1478724364.0, "url": "https://www.reddit.com/r/javascript/comments/5c0t7y/what_would_be_the_most_important_thing_for_you_in/", "author_flair_text": null, "quarantine": false, "title": "What would be the most important thing for you in a React.js framework? (x-post from /r/javascript)", "created_utc": 1478695564.0, "link_flair_text": null, "distinguished": null, "num_comments": 4, "visited": false, "num_reports": null, "ups": 11}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "youtube.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "http://youtube.com", "description": "Sign in now to see your channels and recommendations!", "title": "React Native Showcase - YouTube", "thumbnail_width": 320, "height": 450, "width": 600, "html": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2Fvideoseries%3Flist%3DPLFTKIsNqRabxeeCZpr3MmgQDhqtZ89wW9&amp;url=https%3A%2F%2Fwww.youtube.com%2Fplaylist%3Flist%3DPLFTKIsNqRabxeeCZpr3MmgQDhqtZ89wW9&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FMk70T3qlRuo%2Fhqdefault.jpg%3Fcustom%3Dtrue%26w%3D320%26h%3D180%26stc%3Dtrue%26jpg444%3Dtrue%26jpgq%3D90%26sp%3D68%26sigh%3DSk5iLrUoLPkLMvk64sSNsdVtrFI&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=youtube\" width=\"600\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "version": "1.0", "provider_name": "YouTube", "thumbnail_url": "https://i.embed.ly/1/image?url=https%3A%2F%2Fi.ytimg.com%2Fvi%2FMk70T3qlRuo%2Fhqdefault.jpg%3Fcustom%3Dtrue%26w%3D320%26h%3D180%26stc%3Dtrue%26jpg444%3Dtrue%26jpgq%3D90%26sp%3D68%26sigh%3DSk5iLrUoLPkLMvk64sSNsdVtrFI&amp;key=b1e305db91cf4aa5a86b732cc9fffceb", "type": "video", "thumbnail_height": 180}}, "saved": false, "id": "5c2jdq", "gilded": 0, "secure_media_embed": {"content": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2Fvideoseries%3Flist%3DPLFTKIsNqRabxeeCZpr3MmgQDhqtZ89wW9&amp;url=https%3A%2F%2Fwww.youtube.com%2Fplaylist%3Flist%3DPLFTKIsNqRabxeeCZpr3MmgQDhqtZ89wW9&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FMk70T3qlRuo%2Fhqdefault.jpg%3Fcustom%3Dtrue%26w%3D320%26h%3D180%26stc%3Dtrue%26jpg444%3Dtrue%26jpgq%3D90%26sp%3D68%26sigh%3DSk5iLrUoLPkLMvk64sSNsdVtrFI&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=youtube\" width=\"600\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 450}, "clicked": false, "report_reasons": null, "author": "samokoro", "media": {"type": "youtube.com", "oembed": {"provider_url": "http://youtube.com", "description": "Sign in now to see your channels and recommendations!", "title": "React Native Showcase - YouTube", "thumbnail_width": 320, "height": 450, "width": 600, "html": "&lt;iframe class=\"embedly-embed\" src=\"//cdn.embedly.com/widgets/media.html?src=http%3A%2F%2Fwww.youtube.com%2Fembed%2Fvideoseries%3Flist%3DPLFTKIsNqRabxeeCZpr3MmgQDhqtZ89wW9&amp;url=https%3A%2F%2Fwww.youtube.com%2Fplaylist%3Flist%3DPLFTKIsNqRabxeeCZpr3MmgQDhqtZ89wW9&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FMk70T3qlRuo%2Fhqdefault.jpg%3Fcustom%3Dtrue%26w%3D320%26h%3D180%26stc%3Dtrue%26jpg444%3Dtrue%26jpgq%3D90%26sp%3D68%26sigh%3DSk5iLrUoLPkLMvk64sSNsdVtrFI&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=youtube\" width=\"600\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "version": "1.0", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/Mk70T3qlRuo/hqdefault.jpg?custom=true&amp;w=320&amp;h=180&amp;stc=true&amp;jpg444=true&amp;jpgq=90&amp;sp=68&amp;sigh=Sk5iLrUoLPkLMvk64sSNsdVtrFI", "type": "video", "thumbnail_height": 180}}, "name": "t3_5c2jdq", "score": 3, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/jd0e6WHSOJ1u4VAZE3Q9Q-4NsLug2518hjzCs9P4D0I.jpg?s=4010d70123291e781f130f08cc950592", "width": 320, "height": 180}, "resolutions": [{"url": "https://i.redditmedia.com/jd0e6WHSOJ1u4VAZE3Q9Q-4NsLug2518hjzCs9P4D0I.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=ded4917d485f255c44427a13d9cb1fd3", "width": 108, "height": 60}, {"url": "https://i.redditmedia.com/jd0e6WHSOJ1u4VAZE3Q9Q-4NsLug2518hjzCs9P4D0I.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=11abfbc312973b0ad27ac28a7d8d3390", "width": 216, "height": 121}, {"url": "https://i.redditmedia.com/jd0e6WHSOJ1u4VAZE3Q9Q-4NsLug2518hjzCs9P4D0I.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=426081d6d6b9fae6690c7542161353be", "width": 320, "height": 180}], "variants": {}, "id": "X85dMV1tFHHcCqf3wlDLwK9Gp7lMepSgX6IxSmUHv98"}]}, "thumbnail": "http://a.thumbs.redditmedia.com/uXtses2L-ObotkDLSuWdjKP0-FswvKV7GmGjPWePW20.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {"content": "&lt;iframe class=\"embedly-embed\" src=\"//cdn.embedly.com/widgets/media.html?src=http%3A%2F%2Fwww.youtube.com%2Fembed%2Fvideoseries%3Flist%3DPLFTKIsNqRabxeeCZpr3MmgQDhqtZ89wW9&amp;url=https%3A%2F%2Fwww.youtube.com%2Fplaylist%3Flist%3DPLFTKIsNqRabxeeCZpr3MmgQDhqtZ89wW9&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FMk70T3qlRuo%2Fhqdefault.jpg%3Fcustom%3Dtrue%26w%3D320%26h%3D180%26stc%3Dtrue%26jpg444%3Dtrue%26jpgq%3D90%26sp%3D68%26sigh%3DSk5iLrUoLPkLMvk64sSNsdVtrFI&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=youtube\" width=\"600\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 450}, "post_hint": "rich:video", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5c2jdq/sams_react_native_playlist_open_source/", "locked": false, "stickied": false, "created": 1478742620.0, "url": "https://www.youtube.com/playlist?list=PLFTKIsNqRabxeeCZpr3MmgQDhqtZ89wW9", "author_flair_text": null, "quarantine": false, "title": "Sam's React Native Playlist [Open Source]", "created_utc": 1478713820.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 3}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "blog.hellojs.org", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5c0dhl", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "burczu", "media": null, "name": "t3_5c0dhl", "score": 10, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/9xLgI9_-FebdxEiqr0sRMiwiIUMWPBEx70wzBIOfppQ.jpg?s=c1a51ad2e949c3ce979d68a47e75b446", "width": 1200, "height": 604}, "resolutions": [{"url": "https://i.redditmedia.com/9xLgI9_-FebdxEiqr0sRMiwiIUMWPBEx70wzBIOfppQ.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=d2f029df737336c827ed022bcc502998", "width": 108, "height": 54}, {"url": "https://i.redditmedia.com/9xLgI9_-FebdxEiqr0sRMiwiIUMWPBEx70wzBIOfppQ.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=7a6139f3fc1b978616a232a0d221d301", "width": 216, "height": 108}, {"url": "https://i.redditmedia.com/9xLgI9_-FebdxEiqr0sRMiwiIUMWPBEx70wzBIOfppQ.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=2c323959dcc7575cad785affbe7d296e", "width": 320, "height": 161}, {"url": "https://i.redditmedia.com/9xLgI9_-FebdxEiqr0sRMiwiIUMWPBEx70wzBIOfppQ.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=b3316bc356e9667056161e85e4b6ba0d", "width": 640, "height": 322}, {"url": "https://i.redditmedia.com/9xLgI9_-FebdxEiqr0sRMiwiIUMWPBEx70wzBIOfppQ.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=167572bc1ec1bddef2f293cfdd098320", "width": 960, "height": 483}, {"url": "https://i.redditmedia.com/9xLgI9_-FebdxEiqr0sRMiwiIUMWPBEx70wzBIOfppQ.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=e93684d5570a1ff78d648d5ba81c629e", "width": 1080, "height": 543}], "variants": {}, "id": "cELVSOm1hReHktuQzqbwMZeHlI1bjQZ10evZv4CuKtI"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/khN8lX0wDuAJhL3vbS1bC-rMO-HoK9kiGySZFk_040I.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5c0dhl/testing_react_native_and_redux/", "locked": false, "stickied": false, "created": 1478716677.0, "url": "https://blog.hellojs.org/testing-react-native-and-redux-e5a71b99e178#.j8cje2vw3", "author_flair_text": null, "quarantine": false, "title": "Testing React Native and Redux", "created_utc": 1478687877.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 10}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5c3z53", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "ndboost", "media": null, "name": "t3_5c3z53", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5c3z53/anyone_used_reduxcli_with_davezukos_kit_yet/", "locked": false, "stickied": false, "created": 1478756985.0, "url": "https://www.reddit.com/r/reactjs/comments/5c3z53/anyone_used_reduxcli_with_davezukos_kit_yet/", "author_flair_text": null, "quarantine": false, "title": "Anyone used redux-CLI with davezuko's kit yet? Trying to generate fractal routes and components/containers", "created_utc": 1478728185.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello everyone,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve written a series of three articles around Analytics. I thought it was a good idea to share them with you here, even in the ReactJS thread, because it concerns us all on our projets, and can help make product more successful.&lt;/p&gt;\n\n&lt;p&gt;Here are the three articles :&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=\"https://blog.bam.tech/developper-news/when-and-why-doing-analytics\"&gt;https://blog.bam.tech/developper-news/when-and-why-doing-analytics&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=\"https://blog.bam.tech/developper-news/which-tool-to-do-analytics\"&gt;https://blog.bam.tech/developper-news/which-tool-to-do-analytics&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=\"https://blog.bam.tech/developper-news/how-to-install-google-analytics-for-react-native\"&gt;https://blog.bam.tech/developper-news/how-to-install-google-analytics-for-react-native&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Hoping you&amp;#39;ll find this post appropriate and useful.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello everyone,\n\nI've written a series of three articles around Analytics. I thought it was a good idea to share them with you here, even in the ReactJS thread, because it concerns us all on our projets, and can help make product more successful.\n\nHere are the three articles :\n\n- https://blog.bam.tech/developper-news/when-and-why-doing-analytics\n\n- https://blog.bam.tech/developper-news/which-tool-to-do-analytics\n\n- https://blog.bam.tech/developper-news/how-to-install-google-analytics-for-react-native\n\nHoping you'll find this post appropriate and useful.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5bzwwn", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "xavier-l", "media": null, "name": "t3_5bzwwn", "score": 6, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/uOXhCU0704UKA5ogfsMYJ8Ee_SD_AfkA5JXDq_V6rPg.jpg?s=e034e7b0323ab28cafc821620a7037f5", "width": 1920, "height": 1080}, "resolutions": [{"url": "https://i.redditmedia.com/uOXhCU0704UKA5ogfsMYJ8Ee_SD_AfkA5JXDq_V6rPg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=99731c9428439811e6dddd19f0d32a40", "width": 108, "height": 60}, {"url": "https://i.redditmedia.com/uOXhCU0704UKA5ogfsMYJ8Ee_SD_AfkA5JXDq_V6rPg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=51ae27defbef5b22746fd13900e26a5a", "width": 216, "height": 121}, {"url": "https://i.redditmedia.com/uOXhCU0704UKA5ogfsMYJ8Ee_SD_AfkA5JXDq_V6rPg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=36782e0c6dad6b4913d5a867e06a94d3", "width": 320, "height": 180}, {"url": "https://i.redditmedia.com/uOXhCU0704UKA5ogfsMYJ8Ee_SD_AfkA5JXDq_V6rPg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=a6e7a49da154e892b9db6703576ca495", "width": 640, "height": 360}, {"url": "https://i.redditmedia.com/uOXhCU0704UKA5ogfsMYJ8Ee_SD_AfkA5JXDq_V6rPg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=f1b365dbfa9a7ba853b46847ffada2a6", "width": 960, "height": 540}, {"url": "https://i.redditmedia.com/uOXhCU0704UKA5ogfsMYJ8Ee_SD_AfkA5JXDq_V6rPg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=e73298898c5e1d3c0088e34aa6326dca", "width": 1080, "height": 607}], "variants": {}, "id": "NRYR1P1OIkKck5Qk-Z24fWkJC7SqwjzlNbTUFnqX-xI"}]}, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "self", "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5bzwwn/why_when_and_how_on_react_native_to_do_analytics/", "locked": false, "stickied": false, "created": 1478709937.0, "url": "https://www.reddit.com/r/reactjs/comments/5bzwwn/why_when_and_how_on_react_native_to_do_analytics/", "author_flair_text": null, "quarantine": false, "title": "Why, when and how (on React Native) to Do Analytics", "created_utc": 1478681137.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 6}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "github.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5c2izc", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "ialsothanks", "media": null, "name": "t3_5c2izc", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/pZEbFthT4fcn7iXiPvlU3hXYGQ8kcaDjDyl7AGZUYus.jpg?s=fad21a33d72b663453645d21d4c1747a", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/pZEbFthT4fcn7iXiPvlU3hXYGQ8kcaDjDyl7AGZUYus.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=e0ff6dc74f9a4ae0eff8ce9e33d4dfa4", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/pZEbFthT4fcn7iXiPvlU3hXYGQ8kcaDjDyl7AGZUYus.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=4a9f0d6391d336ef936f398d4f12acf1", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/pZEbFthT4fcn7iXiPvlU3hXYGQ8kcaDjDyl7AGZUYus.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=91ed196494a202ee17640231ef530ab2", "width": 320, "height": 320}], "variants": {}, "id": "nauIyrhidwauiS2M0nOvex8xL0lokYgJL0Xzo5ZdM8Y"}]}, "thumbnail": "http://a.thumbs.redditmedia.com/J9DuhVqY_5wY6058JDcHg5rXU1dLUFgVRrHYnAJK_94.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5c2izc/github_experoincreactchildroot_creates_a_new/", "locked": false, "stickied": false, "created": 1478742514.0, "url": "https://github.com/experoinc/react-child-root", "author_flair_text": null, "quarantine": false, "title": "GitHub - experoinc/react-child-root: Creates a new child React rendering context within any DOM element you wish.", "created_utc": 1478713714.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "git-toni.gitlab.io", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5c2f3u", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "projtnrp", "media": null, "name": "t3_5c2f3u", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "default", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5c2f3u/xpost_hourly_find_out_your_best_hour_rate_given/", "locked": false, "stickied": false, "created": 1478741431.0, "url": "https://git-toni.gitlab.io/hourly/", "author_flair_text": null, "quarantine": false, "title": "[X-POST] Hourly - Find out your best hour rate given your expenses and country income tax.(Built with React + Redux)", "created_utc": 1478712631.0, "link_flair_text": null, "distinguished": null, "num_comments": 2, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The company I was just hired at builds most of their sites with Kraken.js (sort of an MVCish layer on top of Node.js Express Apps). They use it because it has a lot of built in security as well as built in localization.&lt;/p&gt;\n\n&lt;p&gt;The project I was hired for is essentially to build a react app that lives within their kraken site. For example, users visit the kraken site that has a handful or static pages (about, contact etc.) and users can sign in to view their account that has things like favourites etc. They can also go to search page, which is the React App, that will search listings on the site and allow them to favourite them to their Kraken site account.&lt;/p&gt;\n\n&lt;p&gt;Everything I&amp;#39;ve seen has React living on it&amp;#39;s own. Either as a simple client side app or as an isomorphic react app that handle server and client side rendering. Even the couple of examples I&amp;#39;ve seen that have react and kraken living in the same site, kraken is the model/backend and React is the view/templating layer.&lt;/p&gt;\n\n&lt;p&gt;It sounds like to me, if my company wants to use both frameworks, it&amp;#39;s going to have to be just that: Kraken = model/backend, React =  view/templating/routing. Any ideas? Maybe there is something out there like Kraken that just plays nicely with React? Sorry if I sound like I don&amp;#39;t know what I&amp;#39;m talking about. I&amp;#39;ve only been working with React and Kraken for 2 weeks now.&lt;/p&gt;\n\n&lt;p&gt;Edit: To add on to this, I was thinking they could build their Kraken as usual with all the user authentification and everything. Then the React app can live on it&amp;#39;s own as a sub domain or something and just make ajax requests for user authentification and saving favourites etc.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "The company I was just hired at builds most of their sites with Kraken.js (sort of an MVCish layer on top of Node.js Express Apps). They use it because it has a lot of built in security as well as built in localization.\n\nThe project I was hired for is essentially to build a react app that lives within their kraken site. For example, users visit the kraken site that has a handful or static pages (about, contact etc.) and users can sign in to view their account that has things like favourites etc. They can also go to search page, which is the React App, that will search listings on the site and allow them to favourite them to their Kraken site account.\n\nEverything I've seen has React living on it's own. Either as a simple client side app or as an isomorphic react app that handle server and client side rendering. Even the couple of examples I've seen that have react and kraken living in the same site, kraken is the model/backend and React is the view/templating layer.\n\nIt sounds like to me, if my company wants to use both frameworks, it's going to have to be just that: Kraken = model/backend, React =  view/templating/routing. Any ideas? Maybe there is something out there like Kraken that just plays nicely with React? Sorry if I sound like I don't know what I'm talking about. I've only been working with React and Kraken for 2 weeks now.\n\nEdit: To add on to this, I was thinking they could build their Kraken as usual with all the user authentification and everything. Then the React app can live on it's own as a sub domain or something and just make ajax requests for user authentification and saving favourites etc.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5c21pa", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "hotbrownDoubleDouble", "media": null, "name": "t3_5c21pa", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": 1478710127.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5c21pa/react_app_in_a_kraken_site_worth_it_or_is_this/", "locked": false, "stickied": false, "created": 1478737732.0, "url": "https://www.reddit.com/r/reactjs/comments/5c21pa/react_app_in_a_kraken_site_worth_it_or_is_this/", "author_flair_text": null, "quarantine": false, "title": "React app in a Kraken site. Worth it? Or Is this overcomplicating things?", "created_utc": 1478708932.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "daveceddia.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5btex5", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "simcptr", "media": null, "name": "t3_5btex5", "score": 32, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/eaD9x2pugZ8p1F3VjLFVUasZG7o0u6B9Ts_3_Vp-2gg.jpg?s=0fa2302be37028003a6757702b9b74ab", "width": 512, "height": 512}, "resolutions": [{"url": "https://i.redditmedia.com/eaD9x2pugZ8p1F3VjLFVUasZG7o0u6B9Ts_3_Vp-2gg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=10d43fd7f96154a1d2cb871548807206", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/eaD9x2pugZ8p1F3VjLFVUasZG7o0u6B9Ts_3_Vp-2gg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=07bcdf6cda50612ec370358937e558a5", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/eaD9x2pugZ8p1F3VjLFVUasZG7o0u6B9Ts_3_Vp-2gg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=7f00ec1f51637e278f800672d18ce19d", "width": 320, "height": 320}], "variants": {}, "id": "VjLWQnPPX1s0wZrQhvVIvuehSUtFHLbvKmPVZ5QoHno"}]}, "thumbnail": "http://a.thumbs.redditmedia.com/OySyr53v1AQ8h2L9kXOrWaGSxgSe-NVhxDblUydHyD4.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5btex5/worthwhile_testing_what_to_test_in_a_react_app/", "locked": false, "stickied": false, "created": 1478643324.0, "url": "https://daveceddia.com/what-to-test-in-react-app/", "author_flair_text": null, "quarantine": false, "title": "Worthwhile Testing: What to test in a React app (and why)", "created_utc": 1478614524.0, "link_flair_text": null, "distinguished": null, "num_comments": 4, "visited": false, "num_reports": null, "ups": 32}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I watched a video a few months ago where a gentleman (I presume) from Facebook spoke about this react component gives you the ability to do @ and # tags in to text fields or something along those lines. My Google-fu is failing me, can anyone point me in the right direction?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I watched a video a few months ago where a gentleman (I presume) from Facebook spoke about this react component gives you the ability to do @ and # tags in to text fields or something along those lines. My Google-fu is failing me, can anyone point me in the right direction?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5bvr7p", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "crazymonkey159", "media": null, "name": "t3_5bvr7p", "score": 8, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5bvr7p/looking_for_a_text_input_component/", "locked": false, "stickied": false, "created": 1478666046.0, "url": "https://www.reddit.com/r/reactjs/comments/5bvr7p/looking_for_a_text_input_component/", "author_flair_text": null, "quarantine": false, "title": "Looking for a text input component", "created_utc": 1478637246.0, "link_flair_text": null, "distinguished": null, "num_comments": 2, "visited": false, "num_reports": null, "ups": 8}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "github.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5bt4bs", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "koistya", "media": null, "name": "t3_5bt4bs", "score": 21, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/wPF7dpLh5ExAo7eRQp2B5eZVmsPvfEHWutrTsI0zymk.jpg?s=5af75ebb62079c0d81543a317759baca", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/wPF7dpLh5ExAo7eRQp2B5eZVmsPvfEHWutrTsI0zymk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=095cfa0847ab7169fb1056a0c88de0dc", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/wPF7dpLh5ExAo7eRQp2B5eZVmsPvfEHWutrTsI0zymk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=39976d719cb3b0f28230df23862d3dc8", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/wPF7dpLh5ExAo7eRQp2B5eZVmsPvfEHWutrTsI0zymk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=3b227fb6d76b9c6aac5f13504a4fcd4e", "width": 320, "height": 320}], "variants": {}, "id": "BupL5fmTfjQ4_n0JaRCY03549WJQd52KBPLLY-RxKjw"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/8l_pV6E55oDlpb6I0FZF7euw8rFlpX9Yc7nAoqFNMhw.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5bt4bs/graphql_starter_kit_w_nodejs_and_javascript/", "locked": false, "stickied": false, "created": 1478639739.0, "url": "https://github.com/kriasoft/graphql-starter-kit", "author_flair_text": null, "quarantine": false, "title": "GraphQL Starter Kit /w Node.js and JavaScript", "created_utc": 1478610939.0, "link_flair_text": null, "distinguished": null, "num_comments": 4, "visited": false, "num_reports": null, "ups": 21}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi there. I have a project that requires ordering some of my components in a table. Basically I have a ListItem component and a List component. List is a table of ListItems that I grab from an API to display data. One of the fields from the database is a orderNo field. This dictates which order the items are in the List component. The goal is be able to change those orderNo by dragging and dropping the ListItem components to their position, pretty much a sortable table. Im completely lost on how to go about this. Any tips or ideas of how to implement this sort of functionality? &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi there. I have a project that requires ordering some of my components in a table. Basically I have a ListItem component and a List component. List is a table of ListItems that I grab from an API to display data. One of the fields from the database is a orderNo field. This dictates which order the items are in the List component. The goal is be able to change those orderNo by dragging and dropping the ListItem components to their position, pretty much a sortable table. Im completely lost on how to go about this. Any tips or ideas of how to implement this sort of functionality? ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5buoi3", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "Jaboof", "media": null, "name": "t3_5buoi3", "score": 7, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5buoi3/table_tr_drag_and_drop_to_reorder/", "locked": false, "stickied": false, "created": 1478655899.0, "url": "https://www.reddit.com/r/reactjs/comments/5buoi3/table_tr_drag_and_drop_to_reorder/", "author_flair_text": null, "quarantine": false, "title": "Table &lt;tr&gt; drag and drop to reorder", "created_utc": 1478627099.0, "link_flair_text": null, "distinguished": null, "num_comments": 4, "visited": false, "num_reports": null, "ups": 7}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "medium.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5buhzs", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "hb_to_ms", "media": null, "name": "t3_5buhzs", "score": 3, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/Z01PpX-r1tXG22hU-j_8k3gHm-gx8RsqAdT8yiQtwao.jpg?s=970c535ade1b2cfe29f8aa6a150fab6e", "width": 1200, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/Z01PpX-r1tXG22hU-j_8k3gHm-gx8RsqAdT8yiQtwao.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=e89e93bb080e8bc4f0cb7116e00b9a6f", "width": 108, "height": 36}, {"url": "https://i.redditmedia.com/Z01PpX-r1tXG22hU-j_8k3gHm-gx8RsqAdT8yiQtwao.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=a256d3ffffb0164a58c9056fa8335bad", "width": 216, "height": 72}, {"url": "https://i.redditmedia.com/Z01PpX-r1tXG22hU-j_8k3gHm-gx8RsqAdT8yiQtwao.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=68f483223696702a0977361577aba3b2", "width": 320, "height": 106}, {"url": "https://i.redditmedia.com/Z01PpX-r1tXG22hU-j_8k3gHm-gx8RsqAdT8yiQtwao.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=8b22b41a4aaee16b0c8252185d7f5142", "width": 640, "height": 213}, {"url": "https://i.redditmedia.com/Z01PpX-r1tXG22hU-j_8k3gHm-gx8RsqAdT8yiQtwao.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=121b7cf14b517e64920957d5cac9b79a", "width": 960, "height": 320}, {"url": "https://i.redditmedia.com/Z01PpX-r1tXG22hU-j_8k3gHm-gx8RsqAdT8yiQtwao.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=f2859dc140637913e497323abc7773d3", "width": 1080, "height": 360}], "variants": {}, "id": "QyKIXOqEllGjVhA4dOkZ8yDM7GhqoDH9Dm1l8WCS2DE"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/_zxaXTj1f6F100SW_EKAzjCjjZn0T1nTf5CXVMGEF0s.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5buhzs/getting_started_with_react_native_and_flow/", "locked": false, "stickied": false, "created": 1478654159.0, "url": "https://medium.com/react-native-training/getting-started-with-react-native-and-flow-d40f55746809#.69kkrh8pc", "author_flair_text": null, "quarantine": false, "title": "Getting Started with React Native and Flow", "created_utc": 1478625359.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 3}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have tried to use react-dnd in my typescript project, but I get errors everytime i try to compile it. I&amp;#39;m using Typescript 1.8.10 with webpack.&lt;/p&gt;\n\n&lt;p&gt;My component class:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/// &amp;lt;reference path=&amp;quot;../../../typings/index.d.ts&amp;quot; /&amp;gt;\n\nimport * as React from &amp;#39;react&amp;#39;;\nimport {Graph} from &amp;#39;../graph/Graph&amp;#39;;\nimport &amp;#39;./_layers.scss&amp;#39;;\nimport Layer from &amp;quot;./Layer&amp;quot;;\nimport { DragDropContext } from &amp;#39;react-dnd&amp;#39;;\nimport HTML5Backend from &amp;#39;react-dnd-html5-backend&amp;#39;;\nimport flow from &amp;#39;lodash/flow&amp;#39;;\n\ninterface LayersProps {\n    graph: Graph;\n}\n\ninterface LayersState {\n}\n\n@DragDropContext(HTML5Backend)\nexport default class Layers extends React.Component&amp;lt;LayersProps, LayersState&amp;gt; {\n    static propTypes = {};\n\n    static defaultProps = {};\n\n\n    constructor(props: LayersProps, context: any) {\n        super(props, context);\n        this.moveLayer = this.moveLayer.bind(this);\n        this.state = {layers: this.props.graph.root.children};\n    }\n\n    render() {\n        return (&amp;lt;ul className=&amp;quot;gd-layers&amp;quot;&amp;gt;\n                {this.renderLayers()}\n            &amp;lt;/ul&amp;gt;\n        );\n    }\n\n    renderLayers() {\n        return this.props.graph.root.children.map((cell, index) =&amp;gt; {\n            return (&amp;lt;Layer key={index} name={index} index={index} mxCell={cell} moveLayer={this.moveLayer}/&amp;gt;\n            )\n        });\n    }\n\n    moveLayer(dragIndex, hoverIndex) {\n        console.log(dragIndex + &amp;#39; &amp;#39; + hoverIndex);\n    }\n\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The Typescript Compiler throws:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[default] e:/projectwork/react-test/src/app/layers/Layers.tsx:18:2 \n    Argument of type &amp;#39;typeof Layers&amp;#39; is not assignable to parameter of type &amp;#39;ComponentClass&amp;lt;{}&amp;gt; | StatelessComponent&amp;lt;{}&amp;gt;&amp;#39;.\n  Type &amp;#39;typeof Layers&amp;#39; is not assignable to type &amp;#39;StatelessComponent&amp;lt;{}&amp;gt;&amp;#39;.\n    Types of property &amp;#39;propTypes&amp;#39; are incompatible.\n      Type &amp;#39;{}&amp;#39; is not assignable to type &amp;#39;ValidationMap&amp;lt;{}&amp;gt;&amp;#39;.\n        Index signature is missing in type &amp;#39;{}&amp;#39;.\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I have installed the typings for react-dnd &amp;amp; react-dnd-html5-backend&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I have tried to use react-dnd in my typescript project, but I get errors everytime i try to compile it. I'm using Typescript 1.8.10 with webpack.\n\nMy component class:\n\n    /// &lt;reference path=\"../../../typings/index.d.ts\" /&gt;\n    \n    import * as React from 'react';\n    import {Graph} from '../graph/Graph';\n    import './_layers.scss';\n    import Layer from \"./Layer\";\n    import { DragDropContext } from 'react-dnd';\n    import HTML5Backend from 'react-dnd-html5-backend';\n    import flow from 'lodash/flow';\n    \n    interface LayersProps {\n        graph: Graph;\n    }\n    \n    interface LayersState {\n    }\n    \n    @DragDropContext(HTML5Backend)\n    export default class Layers extends React.Component&lt;LayersProps, LayersState&gt; {\n        static propTypes = {};\n    \n        static defaultProps = {};\n    \n    \n        constructor(props: LayersProps, context: any) {\n            super(props, context);\n            this.moveLayer = this.moveLayer.bind(this);\n            this.state = {layers: this.props.graph.root.children};\n        }\n    \n        render() {\n            return (&lt;ul className=\"gd-layers\"&gt;\n                    {this.renderLayers()}\n                &lt;/ul&gt;\n            );\n        }\n    \n        renderLayers() {\n            return this.props.graph.root.children.map((cell, index) =&gt; {\n                return (&lt;Layer key={index} name={index} index={index} mxCell={cell} moveLayer={this.moveLayer}/&gt;\n                )\n            });\n        }\n    \n        moveLayer(dragIndex, hoverIndex) {\n            console.log(dragIndex + ' ' + hoverIndex);\n        }\n    \n    \n    }\n\n\nThe Typescript Compiler throws:\n\n    [default] e:/projectwork/react-test/src/app/layers/Layers.tsx:18:2 \n        Argument of type 'typeof Layers' is not assignable to parameter of type 'ComponentClass&lt;{}&gt; | StatelessComponent&lt;{}&gt;'.\n      Type 'typeof Layers' is not assignable to type 'StatelessComponent&lt;{}&gt;'.\n        Types of property 'propTypes' are incompatible.\n          Type '{}' is not assignable to type 'ValidationMap&lt;{}&gt;'.\n            Index signature is missing in type '{}'.\n\nI have installed the typings for react-dnd &amp; react-dnd-html5-backend", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5bsds0", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "CrocnysterGates", "media": null, "name": "t3_5bsds0", "score": 5, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5bsds0/react_dnd_typescript_help/", "locked": false, "stickied": false, "created": 1478627808.0, "url": "https://www.reddit.com/r/reactjs/comments/5bsds0/react_dnd_typescript_help/", "author_flair_text": null, "quarantine": false, "title": "React DnD Typescript Help", "created_utc": 1478599008.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 5}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "medium.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5bq8b7", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "taion", "media": null, "name": "t3_5bq8b7", "score": 21, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "default", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5bq8b7/react_routing_and_data_fetching/", "locked": false, "stickied": false, "created": 1478596113.0, "url": "https://medium.com/@taion/react-routing-and-data-fetching-ec519428135c", "author_flair_text": null, "quarantine": false, "title": "React, routing, and data fetching", "created_utc": 1478567313.0, "link_flair_text": null, "distinguished": null, "num_comments": 7, "visited": false, "num_reports": null, "ups": 21}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "blog.callstack.io", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5bs4yr", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "Ankaem", "media": null, "name": "t3_5bs4yr", "score": 6, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/Y6TabhiwHHRwJFjnOtBCsaaWue0wjw1H2uK1ZhgUSqQ.jpg?s=1d6dbe1ef6a823ae07091b1e7f007d9b", "width": 1200, "height": 800}, "resolutions": [{"url": "https://i.redditmedia.com/Y6TabhiwHHRwJFjnOtBCsaaWue0wjw1H2uK1ZhgUSqQ.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=3956bd967d8397436d9bd1134696c123", "width": 108, "height": 72}, {"url": "https://i.redditmedia.com/Y6TabhiwHHRwJFjnOtBCsaaWue0wjw1H2uK1ZhgUSqQ.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=f912271345937fa5b1dfbd9eb1cc1893", "width": 216, "height": 144}, {"url": "https://i.redditmedia.com/Y6TabhiwHHRwJFjnOtBCsaaWue0wjw1H2uK1ZhgUSqQ.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=4827b196191fe02fe5027500ead592d1", "width": 320, "height": 213}, {"url": "https://i.redditmedia.com/Y6TabhiwHHRwJFjnOtBCsaaWue0wjw1H2uK1ZhgUSqQ.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=6661e01500714635ec8fca48ed446f8d", "width": 640, "height": 426}, {"url": "https://i.redditmedia.com/Y6TabhiwHHRwJFjnOtBCsaaWue0wjw1H2uK1ZhgUSqQ.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=b7d7c6c6b1a39019b11941f44a436b68", "width": 960, "height": 640}, {"url": "https://i.redditmedia.com/Y6TabhiwHHRwJFjnOtBCsaaWue0wjw1H2uK1ZhgUSqQ.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=659666c5a8a0e813ed12058149d9179e", "width": 1080, "height": 720}], "variants": {}, "id": "ZtKyX2hlHEMZKiQabl9Gx5r8NajRfKYQnrIgWB0ULNM"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/ct5sW6G_hjCf3KPmgYkZDlW1hhshBHl_YYE_5dGU5uM.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5bs4yr/typed_redux/", "locked": false, "stickied": false, "created": 1478622894.0, "url": "https://blog.callstack.io/typed-redux-2aa8bff926ff#.12rx93vww", "author_flair_text": null, "quarantine": false, "title": "Typed Redux", "created_utc": 1478594094.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 6}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "socites.github.io", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5bpg1t", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "flexbed", "media": null, "name": "t3_5bpg1t", "score": 11, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/3Pw91Xhp7z5XpBcw6LdeOrDgAxaWQ05_7gXM2qTp_d0.jpg?s=308a39799a0d35e4c914fc213ad000f2", "width": 815, "height": 301}, "resolutions": [{"url": "https://i.redditmedia.com/3Pw91Xhp7z5XpBcw6LdeOrDgAxaWQ05_7gXM2qTp_d0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=cb928cfc103b2dbc24f014f4f5436c7c", "width": 108, "height": 39}, {"url": "https://i.redditmedia.com/3Pw91Xhp7z5XpBcw6LdeOrDgAxaWQ05_7gXM2qTp_d0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=028876771927e3a4cb5a8d5e62da52a3", "width": 216, "height": 79}, {"url": "https://i.redditmedia.com/3Pw91Xhp7z5XpBcw6LdeOrDgAxaWQ05_7gXM2qTp_d0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=93a75c7df3a50de9e59c40f6ea1eff24", "width": 320, "height": 118}, {"url": "https://i.redditmedia.com/3Pw91Xhp7z5XpBcw6LdeOrDgAxaWQ05_7gXM2qTp_d0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=7aa303ed68b0b948437a678a8dc9b3cf", "width": 640, "height": 236}], "variants": {}, "id": "A1bG2MG6f65p6Xlgvk66rdCYukdgMzn0bz-xB8o_iRE"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/q5bfY7FD-f1bql6IDkZPEyJ-lgTXH4S-plfHIPtTGhA.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5bpg1t/beyondjs_react_polymer_framework/", "locked": false, "stickied": false, "created": 1478587466.0, "url": "http://socites.github.io/beyond/", "author_flair_text": null, "quarantine": false, "title": "BeyondJS: React + Polymer Framework.", "created_utc": 1478558666.0, "link_flair_text": null, "distinguished": null, "num_comments": 2, "visited": false, "num_reports": null, "ups": 11}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;OK I know this is going to be a little controversial but inline styles are great for alot of reasons, the main reason though is being able to see styles right in your code without jumping around various files.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve been using them for a while I have definitely noticed that the amount of unused styles I have is much much lower, even in heavily refactored code.&lt;/p&gt;\n\n&lt;p&gt;As far as I see it the main downsides to it are:\n1) apparently the DOM has a harder time handling inline styles versus regular css. (seen here: &lt;a href=\"https://www.youtube.com/watch?v=_70Yp8KPXH8\"&gt;https://www.youtube.com/watch?v=_70Yp8KPXH8&lt;/a&gt;)\n2) I am unable to use tools like AutoPrefixer&lt;/p&gt;\n\n&lt;p&gt;I know tools like Less and Sass are great, but I found that having the styles inline has been even better for me. That being said I miss the ability to use tools like AutoPrefixer.&lt;/p&gt;\n\n&lt;p&gt;Ideally, there would be a way to develop using inline styles and then some sort of automated process where when I compile my code for product (using webpack) my inline styles would be separated out into regular css files which i could then run through tools like AutoPrefixer. In the process of separation I wouldn&amp;#39;t expect any fancy footwork like style optimization or anything, a simple classId substitution would suffice.  &lt;/p&gt;\n\n&lt;p&gt;Is anyone here aware of something like that existing already? If not, any tips on how I might implement something like that?&lt;/p&gt;\n\n&lt;p&gt;I know the majority of you guys probably think I&amp;#39;m nuts, I don&amp;#39;t blame you it took me a while to get used to inline styles too. Using flexbox you really aren&amp;#39;t adding that much bloat to your JSX by having styles inline. I expected there to be more but if done right there doesn&amp;#39;t have to be.&lt;/p&gt;\n\n&lt;p&gt;Anyway, I wasn&amp;#39;t able to find anything like this on my own so I thought this would be as good a place as any to ask.&lt;/p&gt;\n\n&lt;p&gt;Cheers &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "OK I know this is going to be a little controversial but inline styles are great for alot of reasons, the main reason though is being able to see styles right in your code without jumping around various files.\n\nI've been using them for a while I have definitely noticed that the amount of unused styles I have is much much lower, even in heavily refactored code.\n\nAs far as I see it the main downsides to it are:\n1) apparently the DOM has a harder time handling inline styles versus regular css. (seen here: https://www.youtube.com/watch?v=_70Yp8KPXH8)\n2) I am unable to use tools like AutoPrefixer\n\nI know tools like Less and Sass are great, but I found that having the styles inline has been even better for me. That being said I miss the ability to use tools like AutoPrefixer.\n\nIdeally, there would be a way to develop using inline styles and then some sort of automated process where when I compile my code for product (using webpack) my inline styles would be separated out into regular css files which i could then run through tools like AutoPrefixer. In the process of separation I wouldn't expect any fancy footwork like style optimization or anything, a simple classId substitution would suffice.  \n\nIs anyone here aware of something like that existing already? If not, any tips on how I might implement something like that?\n\nI know the majority of you guys probably think I'm nuts, I don't blame you it took me a while to get used to inline styles too. Using flexbox you really aren't adding that much bloat to your JSX by having styles inline. I expected there to be more but if done right there doesn't have to be.\n\nAnyway, I wasn't able to find anything like this on my own so I thought this would be as good a place as any to ask.\n\nCheers ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5bpnjr", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "doubleok", "media": null, "name": "t3_5bpnjr", "score": 6, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/Wb90tCnqxhUlHBU2Ns3veimbhVc4YgPUQLRwgMVf_5A.jpg?s=a461440eea6e439ab773e282df380088", "width": 480, "height": 360}, "resolutions": [{"url": "https://i.redditmedia.com/Wb90tCnqxhUlHBU2Ns3veimbhVc4YgPUQLRwgMVf_5A.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=9aee20d4e5f96e602c02524549895f90", "width": 108, "height": 81}, {"url": "https://i.redditmedia.com/Wb90tCnqxhUlHBU2Ns3veimbhVc4YgPUQLRwgMVf_5A.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=4153376c6f0e2e4ab0b01df2273d8b44", "width": 216, "height": 162}, {"url": "https://i.redditmedia.com/Wb90tCnqxhUlHBU2Ns3veimbhVc4YgPUQLRwgMVf_5A.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=237b2af9b2081dab53c09c8ffcf6bd0a", "width": 320, "height": 240}], "variants": {}, "id": "30gGbDTz1yZW2ReWw-H8MlP-MXUhVPn-nFgeXZ94tKE"}]}, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "self", "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5bpnjr/styles_in_react/", "locked": false, "stickied": false, "created": 1478589708.0, "url": "https://www.reddit.com/r/reactjs/comments/5bpnjr/styles_in_react/", "author_flair_text": null, "quarantine": false, "title": "Styles in React", "created_utc": 1478560908.0, "link_flair_text": null, "distinguished": null, "num_comments": 11, "visited": false, "num_reports": null, "ups": 6}}], "after": "t3_5bpnjr", "before": null}}